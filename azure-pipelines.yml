# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
  branches:
    include:
    - '*'
pr:
  - '*'

jobs:
- job: 'Validation'
  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '3.5'
    displayName: 'Use Python 3.5'
  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'
  - script: |
      pip install flake8 flake8-docstrings
      flake8 src
    displayName: 'Flake8'
  - script: |
      pip install pylint
      pylint src/pyvesync_v2
    displayName: 'Pylint'

- job: 'pytest'
  pool:
    vmImage: 'ubuntu-latest'
  strategy:
    matrix:
      Python35:
        python.version: '3.5'
      Python36:
        python.version: '3.6'
      Python37:
        python.version: '3.7'

  steps:
  - task: UsePythonVersion@0
    inputs:
      versionSpec: '$(python.version)'
    displayName: 'Use Python $(python.version)'

  - script: |
      python -m pip install --upgrade pip
      pip install -r requirements.txt
    displayName: 'Install dependencies'
  - script: |
      pip install pytest pytest-azurepipelines
      pytest --junitxml=reports/pytest.xml
    displayName: 'Run Tests'
  - task: PublishTestResults@2
    inputs:
      testResultsFiles: 'reports/pytest.xml'
      testRunTitle: '$(Agent.OS) - $(Builld.DefinitionName) - Python $(python.version)'
    condition: succeededOrFailed()