# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger: none

jobs:
- job: processCommit
  pool:
    vmImage: 'ubuntu-latest'
  steps:
  - task: UsePythonVersion@0
    name: BumpPart
    inputs:
      versionSpec: '3.7'
  - bash: |
      echo "Finding version bump part from commit message"
      echo "$(Build.SourceVersionMessage)"
      message="$(Build.SourceVersionMessage)"
      part="$(echo $message | cut -c 1-5)"
      case "$part"
      in
        'major' ) echo "##vso[task.setvariable variable=bump_part]major";;
        'minor' ) echo "##vso[task.setvariable variable=bump_part]minor";;
        'patch' ) echo "##vso[task.setvariable variable=bump_part]patch";;
        * ) echo "Invalid bump part - $part"
            exit 1;;
      esac
      echo $part
    displayName: Get Version Part from Commit Message
  - bash: |
      python -m pip install --upgrade pip && \
        pip install bump2version
      bump2version $(part) --verbose
      git config user.email $(gitemail)
      git config user.name "Pipeline Push"
      git push --tags
      git push origin master
    condition: in(variables.bump_part, 'minor', 'major', 'patch')
